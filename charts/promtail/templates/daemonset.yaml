apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Release.Name }}-promtail
  labels:
    app: {{ .Release.Name }}-promtail
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-promtail
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-promtail
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.config.serverPort }}"
    spec:
      serviceAccountName: {{ .Release.Name }}-promtail
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      - key: node-role.kubernetes.io/control-plane
        effect: NoSchedule
      - operator: Exists
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: promtail
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "-config.file=/etc/promtail/promtail.yaml"
            - "-log.level=debug"
            - "-print-config-stderr=true"
          env:
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          ports:
            - name: http
              containerPort: {{ .Values.config.serverPort }}
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /etc/promtail
            - name: run
              mountPath: /run/promtail
            - name: varlog
              mountPath: /var/log
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: positions
              mountPath: /positions
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            privileged: true
            readOnlyRootFilesystem: false
            runAsUser: 0
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 180
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 10
            timeoutSeconds: 2
      volumes:
        - name: config
          configMap:
            name: {{ .Release.Name }}-promtail-config
        - name: run
          hostPath:
            path: /run/promtail
            type: DirectoryOrCreate
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: positions
          emptyDir: {} 