apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-loki
  labels:
    app: {{ .Release.Name }}-loki
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-loki
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-loki
    spec:
      containers:
        - name: loki
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.config.server.http_listen_port }}
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /etc/loki
            {{- if .Values.persistence.enabled }}
            - name: storage
              mountPath: /data
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 45
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 45
      volumes:
        - name: config
          configMap:
            name: {{ .Release.Name }}-loki-config
        {{- if .Values.persistence.enabled }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-loki-storage
        {{- end }} 