apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-loki
  labels:
    app: {{ .Release.Name }}-loki
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-loki
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-loki
    spec:
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      {{- if .Values.persistence.enabled }}
      initContainers:
        - name: init-chown-data
          image: busybox:1.35
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c", "mkdir -p /data/loki/chunks /data/loki/boltdb-shipper-active /data/loki/boltdb-shipper-cache /data/wal /data/loki/compactor"]
          volumeMounts:
            - name: storage
              mountPath: /data
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 10001
            runAsGroup: 10001
      {{- end }}
      containers:
        - name: loki
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "-config.file=/etc/loki/loki.yaml"
          ports:
            - name: http
              containerPort: {{ .Values.config.server.http_listen_port }}
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /etc/loki
            {{- if .Values.persistence.enabled }}
            - name: storage
              mountPath: /data
            - name: storage
              mountPath: /wal
              subPath: wal
            {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 45
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 45
      volumes:
        - name: config
          configMap:
            name: {{ .Release.Name }}-loki-config
        {{- if .Values.persistence.enabled }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-loki-storage
        {{- end }} 