apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-grafana
  labels:
    app: grafana
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: grafana
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: grafana
        release: {{ .Release.Name }}
    spec:
      securityContext:
        fsGroup: 472
        runAsUser: 472
        runAsGroup: 472
        runAsNonRoot: true
      containers:
        - name: grafana
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 3000
              name: http
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: {{ .Values.adminUser | quote }}
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: {{ .Values.adminPassword | quote }}
          volumeMounts:
            - name: grafana-data
              mountPath: /var/lib/grafana
            - name: datasources
              mountPath: /etc/grafana/provisioning/datasources
            - name: dashboardproviders
              mountPath: /etc/grafana/provisioning/dashboards
            - name: dashboards
              mountPath: /var/lib/grafana/dashboards/default
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: grafana-data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-grafana
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: datasources
          configMap:
            name: {{ .Release.Name }}-grafana-datasources
        - name: dashboardproviders
          configMap:
            name: {{ .Release.Name }}-grafana-dashboardproviders
        - name: dashboards
          configMap:
            name: {{ .Release.Name }}-grafana-dashboards 